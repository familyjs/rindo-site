import{_ as s,c as o,o as e,a as n}from"./app.3b6acc86.js";const u=JSON.parse('{"title":"Publishing A Component Library","description":"","frontmatter":{},"headers":[{"level":2,"title":"Publishing to Node Package Manager (NPM)","slug":"publishing-to-node-package-manager-npm"},{"level":2,"title":"package.json","slug":"package-json"}],"relativePath":"guide/publishing.md"}'),a={name:"guide/publishing.md"},t=n(`<h1 id="publishing-a-component-library" tabindex="-1">Publishing A Component Library <a class="header-anchor" href="#publishing-a-component-library" aria-hidden="true">#</a></h1><p>There are numerous strategies to publish and distribute your component library to be consumed by external projects. One of the benefits of Rindo is that is makes it easy to generate the various <a href="./output-targets.html">output targets</a> that are right for your use-case.</p><h2 id="publishing-to-node-package-manager-npm" tabindex="-1">Publishing to Node Package Manager (NPM) <a class="header-anchor" href="#publishing-to-node-package-manager-npm" aria-hidden="true">#</a></h2><p>The first step and highly recommended step is to <a href="https://docs.npmjs.com/getting-started/publishing-npm-packages" target="_blank" rel="noopener noreferrer">publish the component library to NPM</a>. NPM is an online software registry for sharing libraries, tools, utilities, packages, etc. Once the library is published to NPM, other projects are able to add your component library as a dependency and use the components within their own projects.</p><h2 id="package-json" tabindex="-1"><code>package.json</code> <a class="header-anchor" href="#package-json" aria-hidden="true">#</a></h2><p>The purpose of the <code>package.json</code> file is to give other tools instructions on how to find the package&#39;s files, and to provide information about the package. For example, bundlers such as <a href="https://rollupjs.org/" target="_blank" rel="noopener noreferrer">Rollup</a> and <a href="https://webpack.js.org/" target="_blank" rel="noopener noreferrer">Webpack</a> use this configuration to locate the project&#39;s entry files.</p><p>An advantage to using the compiler is that it is able to provide help on how to best set up the project for distribution. Below is a common setup found within a project&#39;s <code>package.json</code> file:</p><div class="language-json"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist/index.cjs.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist/index.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">es2015</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist/esm/index.mjs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">es2017</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist/esm/index.mjs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">types</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist/types/components.d.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">unpkg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist/my-project-name/my-project-name.esm.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">collection:main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist/collection/index.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">collection</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist/collection/collection-manifest.json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">files</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">css/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">loader/</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><table><thead><tr><th>Property</th><th>Description</th><th>Recommended</th></tr></thead><tbody><tr><td><code>main</code></td><td>Entry file in the CommonJS module format.</td><td><code>dist/index.cjs.js</code></td></tr><tr><td><code>module</code></td><td>Entry file in the ES module format. ES modules is the standardized and recommended format.</td><td><code>dist/index.js</code></td></tr><tr><td><code>es2015</code></td><td>Commonly used by framework bundling.</td><td><code>dist/esm/index.mjs</code></td></tr><tr><td><code>es2017</code></td><td>Commonly used by framework bundling.</td><td><code>dist/esm/index.mjs</code></td></tr><tr><td><code>types</code></td><td>Entry file to the project&#39;s types.</td><td><code>dist/types/components.d.ts</code></td></tr><tr><td><code>unpkg</code></td><td>Entry file for requests to the projects <a href="https://unpkg.com/" target="_blank" rel="noopener noreferrer">unpkg</a> CDN.</td><td><code>dist/{NAMESPACE}/{NAMESPACE}.js</code></td></tr><tr><td><code>files</code></td><td>Array of files that should be included in a npm release.</td><td><code>[&quot;dist/&quot;, &quot;loader/&quot;]</code></td></tr></tbody></table><p>The <code>collection</code> properties are used to allow lazy loading in other Rindo applications.</p><p>Note: If you are distributing both the <code>dist</code> and <code>dist-custom-elements-bundle</code>, then it&#39;s best to pick one of them as the main entry, that&#39;s up to you.</p>`,11),p=[t];function l(r,c,d,i,D,y){return e(),o("div",null,p)}const h=s(a,[["render",l]]);export{u as __pageData,h as default};
