import{_ as e,c as t,o as i,a}from"./app.3b6acc86.js";const u=JSON.parse('{"title":"Deploying a Rindo Static Site","description":"","frontmatter":{},"headers":[],"relativePath":"guide/static-site-generation-deployment.md"}'),o={name:"guide/static-site-generation-deployment.md"},n=a('<h1 id="deploying-a-rindo-static-site" tabindex="-1">Deploying a Rindo Static Site <a class="header-anchor" href="#deploying-a-rindo-static-site" aria-hidden="true">#</a></h1><p>Deploying a prerendered static site built with Rindo is exactly like deploying any static site, because the output is just a set of HTML files.</p><p>Every path that Rindo detects (or is provided using <code>entryUrls</code> in the prerender config) is generated in the <code>www</code> output target&#39;s directory, with each url given an <code>index.html</code> that becomes the root for the app.</p><p>Think of it as turning every URL in your app into a standalone web page that bootstraps the entire app. No matter what URL a visitor comes to, they will be served an <code>index.html</code> file with that page&#39;s specific content already rendered, but with the entire app then hydrating and loading.</p><p>This means you can simply deploy the <code>www</code> output target&#39;s directory to any static host!</p>',5),s=[n];function r(d,c,p,h,l,_){return i(),t("div",null,s)}const g=e(o,[["render",r]]);export{u as __pageData,g as default};
