import{_ as s,c as a,o as n,a as e}from"./app.3b6acc86.js";const A=JSON.parse('{"title":"Assets","description":"","frontmatter":{},"headers":[{"level":2,"title":"Asset Base Path","slug":"asset-base-path"},{"level":2,"title":"Resolution Overview","slug":"resolution-overview"},{"level":2,"title":"Making Assets Available","slug":"making-assets-available"},{"level":3,"title":"assetsDirs","slug":"assetsdirs"},{"level":3,"title":"Manually Moving Assets","slug":"manually-moving-assets"},{"level":2,"title":"API Reference","slug":"api-reference"},{"level":3,"title":"getAssetPath","slug":"getassetpath"},{"level":3,"title":"setAssetPath","slug":"setassetpath"}],"relativePath":"guide/assets.md"}'),o={name:"guide/assets.md"},l=e(`<h1 id="assets" tabindex="-1">Assets <a class="header-anchor" href="#assets" aria-hidden="true">#</a></h1><p>Rindo components may need one or more static files as a part of their design. These types of files are referred to as &#39;assets&#39;, and include images, fonts, etc.</p><p>In this guide, we describe different strategies for resolving assets on the filesystem.</p><div class="warning custom-block"><p class="custom-block-title">CSS files are handled differently than assets; for more on using CSS, please see the <a href="./styling.html">styling documentation</a>.</p></div><h2 id="asset-base-path" tabindex="-1">Asset Base Path <a class="header-anchor" href="#asset-base-path" aria-hidden="true">#</a></h2><p>The <strong>asset base path</strong> is the directory that Rindo will use to resolve assets. When a component uses an asset, the asset&#39;s location is resolved relative to the asset base path.</p><p>The asset base path is automatically set for the following output targets:</p><ul><li><a href="./distribution.html">dist</a></li><li><a href="./hydrate-app.html">hydrate</a></li><li><a href="./www.html">www</a></li></ul><p>For all other output targets, assets must be <a href="./assets.html#manually-moving-assets">moved</a> and the asset base path must be <a href="./assets.html#setassetpath">manually set</a>.</p><p>For each instance of the Rindo runtime that is loaded, there is a single asset base path. Oftentimes, this means there is only one asset base path per application using Rindo.</p><h2 id="resolution-overview" tabindex="-1">Resolution Overview <a class="header-anchor" href="#resolution-overview" aria-hidden="true">#</a></h2><p>The process of resolving an asset involves asking Rindo to build a path to the asset on the filesystem.</p><p>When an asset&#39;s path is built, the resolution is always done in a project&#39;s compiled output, not the directory containing the original source code.</p><p>The example below uses the output of the <a href="./www.html"><code>www</code> output target</a> to demonstrate how assets are resolved. Although the example uses the output of <code>www</code> builds, the general principle of how an asset is found holds for all output targets.</p><p>When using the <code>www</code> output target, a <code>build/</code> directory is automatically created and set as the asset base path. An example <code>build/</code> directory and the assets it contains can be found below.</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">www/</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 build/</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 assets/</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2502   \u251C\u2500\u2500 logo.png</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2502   \u2514\u2500\u2500 scenery/</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2502       \u251C\u2500\u2500 beach.png</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2502       \u2514\u2500\u2500 sunset.png</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2514\u2500\u2500 other-assets/</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502       \u2514\u2500\u2500 font.tiff</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2514\u2500\u2500 ...</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>To resolve the path to an asset, Rindo&#39;s <a href="./assets.html#getassetpath"><code>getAssetPath()</code> API</a> may be used. When using <code>getAssetPath</code>, the assets in the directory structure above are resolved relative to <code>build/</code>.</p><p>The code sample below demonstrates the return value of <code>getAssetPath</code> for different <code>path</code> arguments. The return value is a path that Rindo has built to retrieve the asset on the filesystem.</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// with an asset base path of &quot;/build/&quot;:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;/build/assets/logo.png&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">getAssetPath</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">assets/logo.png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;/build/assets/scenery/beach.png&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">getAssetPath</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">assets/scenery/beach.png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &#39;/build/other-assets/font.tiff&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">getAssetPath</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">other-assets/font.tiff</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div><h2 id="making-assets-available" tabindex="-1">Making Assets Available <a class="header-anchor" href="#making-assets-available" aria-hidden="true">#</a></h2><p>In order to be able to find assets at runtime, they need to be found on the filesystem from the output of a Rindo build. In other words, we need to ensure they exist in the distribution directory. This section describes how to make assets available under the asset base path.</p><h3 id="assetsdirs" tabindex="-1">assetsDirs <a class="header-anchor" href="#assetsdirs" aria-hidden="true">#</a></h3><p>The <code>@Component</code> decorator can be <a href="./component.html#component-options">configured with the <code>assetsDirs</code> option</a>. <code>assetsDirs</code> takes an array of strings, where each entry is a relative path from the component to a directory containing the assets the component requires.</p><p>When using the <code>dist</code> or <code>www</code> output targets, setting <code>assetsDirs</code> instructs Rindo to copy that folder into the distribution folder. When using other output targets, Rindo will not copy assets into the distribution folder.</p><p>Below is an example project&#39;s directory structure containing an example component and an assets directory.</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">src/</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2514\u2500\u2500 components/</span></span>
<span class="line"><span style="color:#A6ACCD;">    \u251C\u2500\u2500 assets/</span></span>
<span class="line"><span style="color:#A6ACCD;">    \u2502   \u251C\u2500\u2500 beach.jpg</span></span>
<span class="line"><span style="color:#A6ACCD;">    \u2502   \u2514\u2500\u2500 sunset.jpg</span></span>
<span class="line"><span style="color:#A6ACCD;">    \u2514\u2500\u2500 my-component.tsx</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Below, the <code>my-component</code> component will correctly load the assets based on it&#39;s <code>image</code> prop.</p><div class="language-tsx"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// file: my-component.tsx</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1. getAssetPath is imported from &#39;@rindo/core&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Component</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Prop</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">getAssetPath</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">h</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@rindo/core</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">Component</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">tag</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my-component</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 2. assetsDirs lists the &#39;assets&#39; directory as a relative</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//    (sibling) directory</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">assetsDirs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">assets</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyComponent</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">Prop</span><span style="color:#A6ACCD;">() </span><span style="color:#F07178;">image</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sunset.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">render</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 3. the asset path is retrieved relative to the asset </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//    base path to use in the &lt;img&gt; tag</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">imageSrc</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">getAssetPath</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">./assets/</span><span style="color:#89DDFF;">\${</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">image</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">imageSrc</span><span style="color:#89DDFF;">} /&gt;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>In the example above, the following allows <code>my-component</code> to display the provided asset:</p><ol><li><a href="./assets.html#getassetpath"><code>getAssetPath()</code></a> is imported from <code>@rindo/core</code></li><li>The <code>my-component</code>&#39;s component decorator has the <code>assetsDirs</code> property, and lists the sibling directory, <code>assets</code>. This will copy <code>assets</code> over to the distribution directory.</li><li><code>getAssetPath</code> is used to retrieve the path to the image to be used in the <code>&lt;img&gt;</code> tag</li></ol><h3 id="manually-moving-assets" tabindex="-1">Manually Moving Assets <a class="header-anchor" href="#manually-moving-assets" aria-hidden="true">#</a></h3><p>For the <a href="./custom-elements.html">dist-custom-elements</a> output target, options like <code>assetsDirs</code> do not copy assets to the distribution directory.</p><p>It&#39;s recommended that a bundler (such as rollup) or a Rindo <code>copy</code> task is used to ensure the static assets are copied to the distribution directory.</p><h4 id="rindo-copy-task" tabindex="-1">Rindo Copy Task <a class="header-anchor" href="#rindo-copy-task" aria-hidden="true">#</a></h4><p><a href="./copy-tasks.html">Rindo <code>copy</code> task</a>&#39;s can be used to define files and folders to be copied over to the distribution directory.</p><p>The example below shows how a copy task can be used to find all &#39;.jpg&#39; and &#39;.png&#39; files under a project&#39;s <code>src</code> directory and copy them to <code>dist/components/assets</code> at build time.</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Config</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@rindo/core</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> config</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Config</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">namespace</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">your-component-library</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">outputTargets</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dist-custom-elements</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">copy</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">src</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">**/*.{jpg,png}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">dest</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dist/components/assets</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">warn</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">      ]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h4 id="rollup-configuration" tabindex="-1">Rollup Configuration <a class="header-anchor" href="#rollup-configuration" aria-hidden="true">#</a></h4><p><a href="./plugins.html#rollup-plugins">Rollup Plugins</a>&#39;s can be used to define files and folders to be copied over to the distribution directory.</p><p>The example below shows how a the <code>rollup-plugin-copy</code> NPM module can be used to find all &#39;.jpg&#39; and &#39;.png&#39; files under a project&#39;s <code>src</code> directory and copy them to <code>dist/components/assets</code> at build time.</p><div class="language-javascript"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Config</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@rindo/core</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> copy </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">rollup-plugin-copy</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> config</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Config</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">namespace</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">copy</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">outputTargets</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dist-custom-elements</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">rollupPlugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">after</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">copy</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">targets</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">src</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src/**/*.{jpg,png}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">dest</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dist/components/assets</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">          ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      ]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="api-reference" tabindex="-1">API Reference <a class="header-anchor" href="#api-reference" aria-hidden="true">#</a></h2><h3 id="getassetpath" tabindex="-1">getAssetPath <a class="header-anchor" href="#getassetpath" aria-hidden="true">#</a></h3><p><code>getAssetPath()</code> is an API provided by Rindo to build the path to an asset, relative to the asset base path.</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">/** </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * Builds a URL to an asset. This is achieved by combining the </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * provided \`path\` argument with the base asset path.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">path</span><span style="color:#676E95;font-style:italic;"> the path of the asset to build a URL to</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">returns</span><span style="color:#676E95;font-style:italic;"> the built URL</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getAssetPath</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>The code sample below demonstrates the return value of <code>getAssetPath</code> for different <code>path</code> arguments, when an asset base path of <code>/build/</code> has been set.</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// with an asset base path of &quot;/build/&quot;:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &quot;/build/&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">getAssetPath</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &quot;/build/my-image.png&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">getAssetPath</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my-image.png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &quot;/build/assets/my-image.png&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">getAssetPath</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">assets/my-image.png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &quot;/build/assets/my-image.png&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">getAssetPath</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./assets/my-image.png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &quot;/assets/my-image.png&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">getAssetPath</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">../assets/my-image.png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &quot;/assets/my-image.png&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">getAssetPath</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/assets/my-image.png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="setassetpath" tabindex="-1">setAssetPath <a class="header-anchor" href="#setassetpath" aria-hidden="true">#</a></h3><p><code>setAssetPath</code> is an API provided by Rindo to manually set the asset base path where assets can be found.</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * Set the base asset path for resolving components</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">path</span><span style="color:#676E95;font-style:italic;"> the base asset path</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">returns</span><span style="color:#676E95;font-style:italic;"> the new base asset path</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setAssetPath</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>Calling this API will set the asset base path for all Rindo components attached to a Rindo runtime. As a result, calling <code>setAssetPath</code> should not be done from within a component in order to prevent unwanted side effects when using a component.</p><p>If the file calling <code>setAssetPath</code> is a module, it&#39;s recommended to use <code>import.<wbr>meta.url</code>.</p><p>Alternatively, one may use <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/currentScript" target="_blank" rel="noopener noreferrer"><code>document.currentScript.src</code></a> when working in the browser and not using modules or environment variables (e.g. <code>document.env.ASSET_PATH</code>) to set the asset base path. This configuration depends on how your script is bundled, (or lack of bundling), and where your assets can be loaded from.</p>`,53),t=[l];function p(c,r,i,y,D,F){return n(),a("div",null,t)}const C=s(o,[["render",p]]);export{A as __pageData,C as default};
